# Generated by Django 4.2.7 on 2025-08-22 10:58

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Booking",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("booking_id", models.CharField(max_length=255, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "bookings",
            },
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "total_seats",
                    models.PositiveIntegerField(
                        validators=[django.core.validators.MinValueValidator(1)]
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "events",
            },
        ),
        migrations.CreateModel(
            name="Metrics",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("total_holds", models.PositiveIntegerField(default=0)),
                ("total_bookings", models.PositiveIntegerField(default=0)),
                ("total_expiries", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="metrics",
                        to="boxoffice.event",
                    ),
                ),
            ],
            options={
                "db_table": "metrics",
            },
        ),
        migrations.CreateModel(
            name="Hold",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "qty",
                    models.PositiveIntegerField(
                        validators=[django.core.validators.MinValueValidator(1)]
                    ),
                ),
                ("expires_at", models.DateTimeField()),
                ("payment_token", models.CharField(max_length=255, unique=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ACTIVE", "Active"),
                            ("EXPIRED", "Expired"),
                            ("BOOKED", "Booked"),
                        ],
                        default="ACTIVE",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="holds",
                        to="boxoffice.event",
                    ),
                ),
            ],
            options={
                "db_table": "holds",
            },
        ),
        migrations.AddIndex(
            model_name="event",
            index=models.Index(fields=["created_at"], name="events_created_9e2206_idx"),
        ),
        migrations.AddField(
            model_name="booking",
            name="hold",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="booking",
                to="boxoffice.hold",
            ),
        ),
        migrations.AddIndex(
            model_name="metrics",
            index=models.Index(
                fields=["event", "created_at"], name="metrics_event_i_2f2a90_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="hold",
            index=models.Index(
                fields=["status", "expires_at"], name="holds_status_b50df8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="hold",
            index=models.Index(
                fields=["payment_token"], name="holds_payment_8a63f4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="hold",
            index=models.Index(
                fields=["event", "status"], name="holds_event_i_5a9c6f_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="hold",
            constraint=models.CheckConstraint(
                check=models.Q(("qty__gt", 0)), name="hold_qty_positive"
            ),
        ),
        migrations.AddIndex(
            model_name="booking",
            index=models.Index(
                fields=["created_at"], name="bookings_created_118d3e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="booking",
            index=models.Index(
                fields=["booking_id"], name="bookings_booking_dcd799_idx"
            ),
        ),
    ]
